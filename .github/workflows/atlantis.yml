name: Atlantis

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review:
    types: [submitted]
  issue_comment:
    types: [created]
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  issues: write
  statuses: write

jobs:
  atlantis:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.0.0

    - name: Setup Atlantis
      uses: runatlantis/atlantis-action@v0.1.0
      with:
        atlantis_version: v0.19.8
        github_token: ${{ secrets.GITHUB_TOKEN }}
        github_user: ${{ github.actor }}
        repo_allowlist: ${{ github.repository }}
        atlantis_config: |
          repos:
          - id: ${{ github.repository }}
            workflow: custom
          workflows:
            custom:
              plan:
                steps:
                - run: terraform init -input=false
                - run: terraform plan -input=false -out=$PLANFILE
              apply:
                steps:
                - run: terraform apply -input=false $PLANFILE
        
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.6.0
      with:
        project_id: polished-tube-312806
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    - name: Update Pull Request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
